@use "sass:math";

.form-input-wrapper {
  position: relative;
  text-align: left;

  .form-input-error {
    color: var(--ion-color-danger);
    left: var(--spacer);
    position: relative;
  }

  .form-input-message {
    color: white;
    left: var(--spacer);
    position: relative;
    //position: absolute;
    //bottom: var(--ion-margin-megative);
  }
}

.form-input {
  --border-radius: 15px;
  --background: var(--ion-color-secondary);
  background: transparent;

  &.item-has-focus {
    &::part(native) {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }
  }

  &.is-readonly {
    --background: transparent;

    &.item-select {
      /*opacity: 1;*/
      &.item-interactive-disabled {
        ion-label, .select-disabled {
          opacity: 1 !important;
        }
      }
    }

  }

  &.is-disabled {
    --background: transparent;
  }


}

.form-input-condensed {
  //--padding-top: calc(var(--spacer) / 2) !important;
  --padding-bottom: calc(var(--spacer) / 2) !important;
  height: auto;
}

ion-input {
  --padding-start: 15px;
  --placeholder-color: #888;

  align-items: center;
  margin-left: auto;
  margin-right: auto;
  /*max-width: 60vh;*/

  border-radius: 20px;
  height: 4rem;

  color: #969696;

  text-align: left;
}

ion-select {
  min-height: 43px;
}

//.label-floating.sc-ion-label-md-h,
//  .item-textarea .label-floating.sc-ion-label-md-h
.item-textarea {

  &:not(.item-has-focus):not(.item-has-value) {
    .label-floating {

      transform: translateY(96%);
    }
  }
}

.form-rte {
  --min-height: 190px;

  .ProseMirror {
    border: none;
    text-align: inherit;
    width: 100%;
    min-height: 100px;

    p {
      margin-top: math.div($spacer, 2);
      margin-bottom: math.div($spacer, 2);
    }

    &.ProseMirror-focused {
      border: none;
      outline: none;
    }
  }

  &::part(native) {
  }
}
